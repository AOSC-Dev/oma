name: create-pull-request

on:
  push:
    tags:
      - "v*.*.*-ci-test*"

jobs:
  create-abbs-pr:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set env
        env:
          ACTION_DEPLOY_KEY: ${{ secrets.ACTION_DEPLOY_KEY }}
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
          mkdir -p ~/.ssh/
          echo "$ACTION_DEPLOY_KEY" | tr -d '\r' > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      - name: Get `aosc-os-abbs`
        run: git clone git@github.com:AOSC-Dev/aosc-os-abbs.git
      - name: Install dependencies
        run: |
          sudo apt update && sudo apt install -y git gh
      - name: Update version
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          cd ./aosc-os-abbs/app-admin/oma
          git config user.name "eatradish"
          git config user.email "sakiiily@aosc.io"
          # Check if the `oma-preview' branch exists, create if not.
          if ! git rev-parse --verify origin/oma-preview-ci-test > /dev/null; then
              git checkout -b oma-preview-ci-test
          else
              # Checkout the existing branch.
              git checkout oma-preview-ci-test
              # Rebase the branch. Failing rebases will need to be handled manually.
              git rebase stable
          fi
          # Get the baseline version.
          source ./spec
          # Note: Use tilde (~) to denote pre-release, allowing users to upgrade to a final release later.
          export DPKG_VER=$(echo ${RELEASE_VERSION} | sed -e 's|v||g' | sed -e 's|-|~|g')
          sed -e "s|VER=$VER|VER=${DPKG_VER}|g" -i spec
          sed -e "s|REL=$REL||g" -i spec
          sed -e '/^$/d' -i spec
          git add .
          git commit -m "oma: update to ${DPKG_VER}"
          # Note: Git not allow tilde (~) in branch names, so use dash here.
          git push --set-upstream --force origin oma-preview-ci-test
          # https://github.com/cli/cli/discussions/5792#discussioncomment-10410197
          export PR_URL="$(gh pr list --head oma-preview-ci-test --state open --json url --jq .[].url)"
          export PR_BODY="$(echo -e "Topic Description\n-----------------\n\n- oma: update to ${DPKG_VER}\n\nPackage(s) Affected\n-------------------\n\n- oma: ${DPKG_VER}\n\nSecurity Update?\n----------------\n\nNo\n\nBuild Order\n-----------\n\n\`\`\`\n#buildit oma\n\`\`\`\n\nTest Build(s) Done\n------------------\n\n**Primary Architectures**\n\n- [ ] AMD64 \`amd64\`\n- [ ] AArch64 \`arm64\`\n- [ ] LoongArch 64-bit \`loongarch64\`\n\n**Secondary Architectures**\n\n- [ ] Loongson 3 \`loongson3\`\n- [ ] PowerPC 64-bit (Little Endian) \`ppc64el\`\n- [ ] RISC-V 64-bit \`riscv64\`\n\n\n")"
          if [[ -n "${PR_URL}" ]]; then
            uri=$(echo ${PR_BODY} | \
                    gh pr create \
                      -d \
                      --title "oma: update to ${DPKG_VER}" \
                      -l "upgrade,preview" \
                      -F -)
          else
            uri=$(echo ${PR_BODY} | \
                    gh pr edit $(basename ${PR_URL}) \
                      --title "oma: update to ${DPKG_VER}" \
                      -l "upgrade,preview" \
                      -F ${PR_BODY})
          fi
          num=$(basename ${uri})
          curl --header "Content-Type: application/json" \
            --request POST \
            --data "{\"pr\": ${num}}" \
            https://buildit.aosc.io/api/pipeline/new_pr
